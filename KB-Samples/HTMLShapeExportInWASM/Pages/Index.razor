@page "/"

@using Syncfusion.Blazor.Diagram
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations
@using shapes = Syncfusion.Blazor.Diagram.NodeShapes
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO;
@using System.Text.Json;
@using System;
@using System.Drawing.Printing;
@using System.Linq;
@using System.Threading.Tasks;
@using Syncfusion.PdfExport;

<div id="OrgChartDiagram" style="width:3000px;height:1000px;">
    <SfDiagramComponent @ref="@Diagram" ID="diagramContent" Width="100%" Height="100%" ConnectorCreating="@OnConnectorCreating" NodeCreating="@OnNodeCreating">
        <PageSettings>
            <BackgroundStyle Background="transaparent"></BackgroundStyle>
        </PageSettings>
        <DataSourceSettings ID="EmployeeID" ParentID="ParentID" DataSource="DataSource"> </DataSourceSettings>
        <Layout @bind-Type="Type" @bind-HorizontalSpacing="@HorizontalSpacing" @bind-Orientation="@OrientationType" @bind-VerticalSpacing="@VerticalSpacing" @bind-HorizontalAlignment="@HorizontalAlignment" @bind-VerticalAlignment="@VerticalAlignment" GetLayoutInfo="GetLayoutInfo">
            <LayoutMargin @bind-Top="@Top" @bind-Bottom="@Bottom" @bind-Right="@Right" @bind-Left="@Left"></LayoutMargin>
        </Layout>

        <SnapSettings Constraints="@SnapConstraints.None"></SnapSettings>
        <DiagramTemplates>
            <NodeTemplate>
                @{
                        Node node1 = (context as Node);
                        string Name = (node1.Data as HierarchicalDetails).Name;
                        string Role = (node1.Data as HierarchicalDetails).Designation;
                        string Imageurl = (node1.Data as HierarchicalDetails).BG;
                        if (Name == "Maria Anders")
                        {
                            <div class=e-orgchart-div style=" width: 181px;
                        height: 54px;
                        position: absolute;">
                                <div class="e-orgchart-image-div" style=" width: 181px;
                        height: 54px;
                        position: absolute;
                        left: 0px;
                        top: 0px;
                        border: 1px solid #9B9B9B;
                        box-sizing: border-box;
                        border-top-left-radius: 4px;
                        border-top-right-radius: 4px;
                        border-bottom-left-radius: 4px;
                        border-bottom-right-radius: 4px;padding-left:8px;padding-right:12px;padding-top:5px;padding-bottom:5px">
                                    <div id="image" class="e-orgchart-template-image-style" style=" width: 44px;
                        height: 42px;
                        left: 12px;
                        right: 12px;
                        /* top: 154px; */
                        float: left;
                        background-size: 100% 100%;background-image: url(@( @Imageurl));">
                                    </div>
                                </div><span class="e-orgchart-name-div" style="     color: rgba(64.81249898672104, 64.81249898672104, 64.81249898672104, 1);
                        width: 150px;
                        height: 16px;
                        position: absolute;
                        left: 68px;
                        top: 10px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 14px;
                        letter-spacing: 0;margin-left:-4px">@Name</span><span style="  color: rgba(122.1874974668026, 122.1874974668026, 122.1874974668026, 1);
                        width: 100px;
                        height: 14px;
                        position: absolute;
                        left: 68px;
                        top: 30px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 12px;
                        letter-spacing: 0;" class="e-orgchart-role-div">@Role</span>
                                <div class="e-orgchart-whole-div" style=" border-radius: 500px;

                        width: 44px;
                        height: 44px;
                        position: absolute;
                        left: 12px;
                        top: 5px;margin-left:-4px"></div>
                            </div>
                        }
                        else if (Name == "Miguel Angel Paolino")
                        {
                            <div class=e-orgchart-div style=" width: 181px;
                        height: 54px;
                        position: absolute;">
                                <div class="e-orgchart-image-div" style=" width: 181px;
                        height: 54px;
                        position: absolute;
                        left: 0px;
                        top: 0px;
                        border: 1px solid #9B9B9B;
                        box-sizing: border-box;
                        border-top-left-radius: 4px;
                        border-top-right-radius: 4px;
                        border-bottom-left-radius: 4px;
                        border-bottom-right-radius: 4px;padding-left:8px;padding-right:12px;padding-top:5px;padding-bottom:5px;width:210px">
                                    <div id="image" class="e-orgchart-template-image-style" style=" width: 44px;
                        height: 42px;
                        left: 12px;
                        right: 12px;
                        /* top: 154px; */
                        float: left;
                        background-size: 100% 100%;background-image: url(@(  @Imageurl));">
                                    </div>
                                </div><span class="e-orgchart-name-div" style="     color: rgba(64.81249898672104, 64.81249898672104, 64.81249898672104, 1);
                        width: 150px;
                        height: 16px;
                        position: absolute;
                        left: 68px;
                        top: 10px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 14px;
                        letter-spacing: 0;margin-left:-4px">@Name</span><span style="  color: rgba(122.1874974668026, 122.1874974668026, 122.1874974668026, 1);
                        width: 100px;
                        height: 14px;
                        position: absolute;
                        left: 68px;
                        top: 30px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 12px;
                        letter-spacing: 0;" class="e-orgchart-role-div">@Role</span>
                                <div class="e-orgchart-whole-div" style=" border-radius: 500px;

                        width: 44px;
                        height: 44px;
                        position: absolute;
                        left: 12px;
                        top: 5px;margin-left:-4px"></div>
                            </div>

                        }
                        else if (Name == "Frédérique Citeaux" || Name == "Christina Berglund" || Name == "Art Braunschweiger")
                        {
                            <div class=e-orgchart-div style=" width: 181px;
                        height: 54px;
                        position: absolute;">
                                <div class="e-orgchart-image-div" style=" width: 181px;
                        height: 54px;
                        position: absolute;
                        left: 0px;
                        top: 0px;
                        border: 1px solid #9B9B9B;
                        box-sizing: border-box;
                        border-top-left-radius: 4px;
                        border-top-right-radius: 4px;
                        border-bottom-left-radius: 4px;
                        border-bottom-right-radius: 4px;padding-left:8px;padding-right:12px;padding-top:5px;padding-bottom:5px;width:195px">
                                    <div id="image" class="e-orgchart-template-image-style" style=" width: 44px;
                        height: 42px;
                        left: 12px;
                        right: 12px;
                        /* top: 154px; */
                        float: left;
                        background-size: 100% 100%;background-image: url(@(  @Imageurl));">
                                    </div>
                                </div><span class="e-orgchart-name-div" style="     color: rgba(64.81249898672104, 64.81249898672104, 64.81249898672104, 1);
                        width: 150px;
                        height: 16px;
                        position: absolute;
                        left: 68px;
                        top: 10px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 14px;
                        letter-spacing: 0;margin-left:-4px">@Name</span><span style="  color: rgba(122.1874974668026, 122.1874974668026, 122.1874974668026, 1);
                        width: 100px;
                        height: 14px;
                        position: absolute;
                        left: 68px;
                        top: 30px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 12px;
                        letter-spacing: 0;" class="e-orgchart-role-div">@Role</span>
                                <div class="e-orgchart-whole-div" style=" border-radius: 500px;

                        width: 44px;
                        height: 44px;
                        position: absolute;
                        left: 12px;
                        top: 5px;margin-left:-4px"></div>
                            </div>

                        }
                        else

                        {

                            <div class=e-orgchart-div style=" width: 181px;
                        height: 54px;
                        position: absolute;">
                                <div class="e-orgchart-image-div" style=" width: 181px;
                        height: 54px;
                        position: absolute;
                        left: 0px;
                        top: 0px;
                        border: 1px solid #9B9B9B;
                        box-sizing: border-box;
                        border-top-left-radius: 4px;
                        border-top-right-radius: 4px;
                        border-bottom-left-radius: 4px;
                        border-bottom-right-radius: 4px;padding-left:8px;padding-right:12px;padding-top:5px;padding-bottom:5px">
                                    <div id="image" class="e-orgchart-template-image-style" style=" width: 44px;
                        height: 42px;
                        left: 12px;
                        right: 12px;
                        /* top: 154px; */
                        float: left;
                        background-size: 100% 100%;background-image: url(@(@Imageurl));">
                                    </div>
                                </div><span class="e-orgchart-name-div" style="color: rgba(64.81249898672104, 64.81249898672104, 64.81249898672104, 1);
                        width: 150px;
                        height: 16px;
                        position: absolute;
                        left: 68px;
                        top: 10px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 14px;
                        letter-spacing: 0;margin-left:-4px">@Name</span><span style="  color: rgba(122.1874974668026, 122.1874974668026, 122.1874974668026, 1);
                        width: 100px;
                        height: 14px;
                        position: absolute;
                        left: 68px;
                        top: 30px;
                        font-family: Roboto;
                        text-align: left;
                        font-size: 12px;
                        letter-spacing: 0;" class="e-orgchart-role-div">@Role</span>
                                <div class="e-orgchart-whole-div" style=" border-radius: 500px;

                        width: 44px;
                        height: 44px;
                        position: absolute;
                        left: 12px;
                        top: 5px;margin-left:-4px"></div>
                            </div>
                        }
                    }
                </NodeTemplate>
            </DiagramTemplates>
        </SfDiagramComponent>

    </div>


    @*Hidden:Lines*@

    <button @onclick="ExportImage">Export as Image</button>
     <button @onclick="ExportDiagram">Export as PDF</button>

    @*End:Hidden*@
    @code {
    @*Hidden:Lines*@

    DiagramInteractions DiagramTool = DiagramInteractions.ZoomPan;
    ScrollLimitMode scrollLimit { get; set; } = ScrollLimitMode.Diagram;
    public SfDiagramComponent Diagram;
    public int? HValue { get; set; } = 60;
    public int? VValue { get; set; } = 60;
    public LayoutType Type = LayoutType.HierarchicalTree;
    public LayoutOrientation OrientationType = LayoutOrientation.TopToBottom;
    public HorizontalAlignment HorizontalAlignment = HorizontalAlignment.Auto;
    public VerticalAlignment VerticalAlignment = VerticalAlignment.Auto;
    public int HorizontalSpacing = 30;
    public int VerticalSpacing = 60;
    public double Top = 30;
    public double Bottom = 30;
    public double Right = 30;
    public double Left = 30;


    //Defines sfdiagramComponent
    SfDiagramComponent diagram;

    //Defines diagram constraints
    public DiagramConstraints constraints { get; set; }

    //Defines diagrams's nodes collection
    public DiagramObjectCollection<Node> nodes = new DiagramObjectCollection<Node>();

    //Defines diagrams's connectors collection
    public DiagramObjectCollection<Connector> connectors = new DiagramObjectCollection<Connector>();

    private void OnConnectorCreating(IDiagramObject connector)
    {
        (connector as Connector).Type = ConnectorSegmentType.Orthogonal;
        (connector as Connector).TargetDecorator.Shape = DecoratorShape.None;
        (connector as Connector).Style = new ShapeStyle() { StrokeColor = "Black", StrokeWidth = 1 };
        (connector as Connector).Constraints = 0;
        (connector as Connector).TargetDecorator = new DecoratorSettings()
            {

                Style = new ShapeStyle()
                {
                    StrokeColor = "#4f4f4f",
                    Fill = "#4f4f4f",
                    StrokeWidth = 1,
                }
            };
    }

    private TreeInfo GetLayoutInfo(IDiagramObject obj, TreeInfo options)
    {
        options.EnableSubTree = true;
        options.Orientation = Syncfusion.Blazor.Diagram.Orientation.Horizontal;
        return options;
    }
    private void OnNodeCreating(IDiagramObject obj)
    {
        Node node = obj as Node;
        node.Width = 180;
        node.Height = 53;
        node.Shape = new Shape()
            { Type = shapes.HTML };
    }
    private async Task ExportImage()
    {
        await JS.InvokeAsync<object>("exportToImage", "OrgChartDiagram");
    }
    private async void SVGExport()
    {
        DiagramExportSettings options = new DiagramExportSettings()
            {
                Region = DiagramPrintExportRegion.PageSettings,
                FitToPage = false,
                Margin = new DiagramThickness() { Bottom = 0, Left = 0, Right = 0, Top = 0 },
            };
        await Diagram.ExportAsync("Diagram", DiagramExportFormat.SVG, options);
    }
      private async Task ExportDiagram()
    {
        string image = await JS.InvokeAsync<string>("exportToPdf", "OrgChartDiagram");
        string[] images = new string[] { image };
        await ExportToPdf("diagram", PdfPageOrientation.Portrait, true, images);
    }
    private async Task<string> ExportToPdf(string fileName, PdfPageOrientation orientation, bool allowDownload, string[] images)
    {
        PdfDocument document = new PdfDocument();
        document.PageSettings.Orientation = orientation;
        document.PageSettings.Margins = new PdfMargins() { Left = 0, Right = 0, Top = 0, Bottom = 0 };
        DiagramRect bounds = Diagram.GetPageBounds();
        document.PageSettings.Height = (float)bounds.Height;
        document.PageSettings.Width = (float)bounds.Width;

        string base64String;
        var dict = images;
        for (int i = 0; i < dict.Count(); i++)
        {
            base64String = dict[i];
            using (MemoryStream initialStream = new MemoryStream(Convert.FromBase64String(base64String.Split("base64,")[1])))
            {
                Stream stream = initialStream as Stream;
                PdfPage page = document.Pages.Add();
                PdfGraphics graphics = page.Graphics;
#pragma warning disable CA2000
                PdfBitmap image = new PdfBitmap(stream);
#pragma warning restore CA2000
                graphics.DrawImage(image, 0, 0);
            }
        }
        using (MemoryStream memoryStream = new MemoryStream())
        {
            document.Save(memoryStream);
            memoryStream.Position = 0;
            base64String = Convert.ToBase64String(memoryStream.ToArray());
            if (allowDownload)
            {
                await JSRuntimeExtensions.InvokeAsync<string>(JS, "downloadPdf", new object[] { base64String, fileName });
                base64String = string.Empty;
            }
            else
            {
                base64String = "data:application/pdf;base64," + base64String;
            }
            document.Dispose();
        }
        return base64String;
    }

    public class HierarchicalDetails
    {
        public string Name { get; set; }
        public string Designation { get; set; }
        public string EmployeeID { get; set; }
        public string TeamName { get; set; }
        public string TeamSize { get; set; }
        public string ParentID { get; set; }
        public string BG { get; set; }
    }
    //Initialize Data Source
    public List<HierarchicalDetails> DataSource = new List<HierarchicalDetails>()
{
        new HierarchicalDetails(){ Name="Maria Anders", Designation="Managing Director", EmployeeID="SF10001", TeamName="Web-Diagram", TeamSize="10", ParentID = "", BG= "images/diagram/people/people-circle14.png"  },
        new HierarchicalDetails(){ Name="Ana Trujillo", Designation="Project Manager ", EmployeeID="SF10002", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10001", BG= "images/diagram/people/people-circle12.png"  },
        new HierarchicalDetails(){ Name="Patricio Simpson" ,Designation="Project Lead", EmployeeID="SF10003", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10002", BG= "images/diagram/people/people-circle18.png"  },
        new HierarchicalDetails(){ Name="Aria Cruz" ,Designation="Project Lead", EmployeeID="SF10004", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10003", BG= "images/diagram/people/people-circle0.png"  },
        new HierarchicalDetails(){ Name="Antonio Moreno", Designation="Project Lead", EmployeeID="SF10005", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10004", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){ Name="Thomas Hardy", Designation="Senior S/w Engg", EmployeeID="SF10006", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10005", BG= "images/diagram/people/people-circle29.png"  },
        new HierarchicalDetails(){ Name="Christina Berglund" ,Designation="S/w Engg", EmployeeID="SF10007", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10006", BG= "images/diagram/people/people-circle12.png"  },
        new HierarchicalDetails(){ Name="Hanna Moos", Designation="Project Trainee", EmployeeID="SF10008", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10007", BG= "images/diagram/people/people-circle27.png"  },
        new HierarchicalDetails(){ Name="Frédérique Citeaux", Designation="Project Trainee", EmployeeID="SF100050", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10007", BG= "images/diagram/people/people-circle1.png"  },
        new HierarchicalDetails(){ Name="Martín Sommer" ,Designation="Senior S/w Engg",EmployeeID="SF10009", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10006", BG= "images/diagram/people/people-circle25.png"  },
        new HierarchicalDetails(){ Name="Maria Larsson" ,Designation="Senior S/w Engg", EmployeeID="SF100010", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10004", BG= "images/diagram/people/people-circle11.png"  },
        new HierarchicalDetails(){ Name="Isabel de Castro", Designation="Project Manager", EmployeeID="SF100011", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10001", BG= "images/diagram/people/people-circle1.png"  },
        new HierarchicalDetails(){ Name="Horst Batista", Designation="Project Lead", EmployeeID="SF100012", TeamName="Web-Diagram", TeamSize="10", ParentID = "SF100021", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){ Name="Lúcia Carvalho" ,Designation="Senior S/w Engg", EmployeeID="SF100013", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100012", BG= "images/diagram/people/people-circle27.png"  },
        new HierarchicalDetails(){ Name="José Pedro Freyre" ,Designation="Senior S/w Engg", EmployeeID="SF100014", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100013", BG= "images/diagram/people/people-circle21.png"  },
        new HierarchicalDetails(){  Name="André Fonseca", Designation="Senior S/w Engg", EmployeeID="SF100015", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100014", BG= "images/diagram/people/people-circle5.png"  },
        new HierarchicalDetails(){ Name="Paula Wilson", Designation="S/w Engg", EmployeeID="SF100016", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100015", BG= "images/diagram/people/people-circle0.png"  },
        new HierarchicalDetails(){ Name="John Bergulfsen", Designation="Project Trainee", EmployeeID="SF100017", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100015", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){ Name="Jose Pavarotti", Designation="S/w Engg", EmployeeID="SF100018", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100015", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){ Name="Miguel Angel Paolino" ,Designation="Project Trainee", EmployeeID="SF100019", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100015", BG= "images/diagram/people/people-circle14.png"  },
        new HierarchicalDetails(){  Name="Horst Kloss", Designation="Project Trainee",EmployeeID="SF100020", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100015", BG= "images/diagram/people/people-circle1.png"  },
        new HierarchicalDetails(){  Name="Wilson Holz" ,Designation="Project Lead", EmployeeID="SF100021", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100011", BG= "images/diagram/people/people-circle12.png"  },
        new HierarchicalDetails(){ Name="Jytte Petersen" ,Designation="Project Manager", EmployeeID="SF100022", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10001", BG= "images/diagram/people/people-circle2.png"  },
        new HierarchicalDetails(){ Name="Liz Nixon" ,Designation="Project Lead", EmployeeID="SF100023", TeamName="Web-Diagram", TeamSize="10", ParentID = "SF100022", BG= "images/diagram/people/people-circle26.png"  },
        new HierarchicalDetails(){Name="Liu Wong" ,Designation="Senior S/w Engg", EmployeeID="SF100024", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100023", BG= "images/diagram/people/people-circle29.png"  },
        new HierarchicalDetails(){  Name="Dominique Perrier" ,Designation="Project Lead", EmployeeID="SF100025", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100023", BG= "images/diagram/people/people-circle10.png"  },
        new HierarchicalDetails(){  Name="Annette Roulet" ,Designation="Senior S/w Engg", EmployeeID="SF100026", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100025", BG= "images/diagram/people/people-circle4.png"  },
        new HierarchicalDetails(){ Name="Carlos González", Designation="SR", EmployeeID="SF100027", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100026", BG= "images/diagram/people/people-circle1.png"  },
        new HierarchicalDetails(){Name="Felipe Izquierdo" ,Designation="SR", EmployeeID="SF100028", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100027", BG= "images/diagram/people/people-circle21.png"  },
        new HierarchicalDetails(){Name="Yoshi Tannamuri", Designation="S/w Engg", EmployeeID="SF100029", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100028", BG= "images/diagram/people/people-circle5.png"  },
        new HierarchicalDetails(){ Name="Fran Wilson", Designation="SR", EmployeeID="SF100030", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100028", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){  Name="Jean Fresnière", Designation="S/w Engg", EmployeeID="SF100031", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100028", BG= "images/diagram/people/people-circle27.png"  },
        new HierarchicalDetails(){  Name="Giovanni Rovelli", Designation="SR", EmployeeID="SF100032", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100028", BG= "images/diagram/people/people-circle26.png"  },
        new HierarchicalDetails(){ Name="Renate Messner", Designation="Project Trainee", EmployeeID="SF100033", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100028", BG= "images/diagram/people/people-circle11.png"  },
        new HierarchicalDetails(){Name="Jaime Yorres" ,Designation="Project Trainee", EmployeeID="SF100034", TeamName="Web-Diagram", TeamSize="10", ParentID = "SF100028", BG= "images/diagram/people/people-circle27.png"  },
        new HierarchicalDetails(){Name="John Steel", Designation="Project Trainee", EmployeeID="SF100035", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100027", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){   Name="Yvonne Moncada", Designation="Project Trainee", EmployeeID="SF100036", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100037", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){ Name="Michael Suyama", Designation="S/w Engg", EmployeeID="SF100037", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100024", BG= "images/diagram/people/people-circle27.png"  },
        new HierarchicalDetails(){ Name="Alexander Feuer", Designation="Project Trainee", EmployeeID="SF100038", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100037", BG= "images/diagram/people/people-circle1.png"  },
        new HierarchicalDetails(){Name="Art Braunschweiger" ,Designation="Project Trainee", EmployeeID="SF100039", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100037", BG= "images/diagram/people/people-circle21.png"  },
        new HierarchicalDetails(){Name="Pascale Cartrain", Designation="Project Trainee", EmployeeID="SF100040", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100037", BG= "images/diagram/people/people-circle10.png"  },
        new HierarchicalDetails(){  Name="Mary Saveley", Designation="Project Manager" , EmployeeID="SF100041", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF10001", BG= "images/diagram/people/people-circle25.png"  },
        new HierarchicalDetails(){  Name="Paul Henriot", Designation="Project Lead",EmployeeID="SF100042", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100041", BG= "images/diagram/people/people-circle21.png"  },
        new HierarchicalDetails(){  Name="Rita Müller" ,Designation="Project Trainee", EmployeeID="SF100043", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100044", BG= "images/diagram/people/people-circle23.png"  },
        new HierarchicalDetails(){ Name="Pirkko Koskitalo", Designation="Senior S/w Engg", EmployeeID="SF100044", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100042", BG= "images/diagram/people/people-circle8.png"  },
        new HierarchicalDetails(){ Name="Karl Jablonski", Designation="Senior S/w Engg" , EmployeeID="SF100045", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100044", BG= "images/diagram/people/people-circle17.png"  },
        new HierarchicalDetails(){  Name="Paula Parente" ,Designation="Project Lead", EmployeeID="SF100046",TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100048", BG= "images/diagram/people/people-circle5.png"  },
        new HierarchicalDetails(){  Name="John Camino" ,Designation="Senior S/w Engg", EmployeeID="SF100047", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100013", BG= "images/diagram/people/people-circle21.png"  },
        new HierarchicalDetails(){ Name="Matti Karttunen", Designation="Project Lead", EmployeeID="SF100048", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100041", BG= "images/diagram/people/people-circle0.png"  },
        new HierarchicalDetails(){  Name="Nancy" ,Designation="Senior S/w Engg", EmployeeID="SF100049", TeamName="Web-Diagram", TeamSize="10", ParentID ="SF100044", BG= "images/diagram/people/people-circle29.png"  },
    };
}
